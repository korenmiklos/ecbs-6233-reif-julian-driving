
  ___  ____  ____  ____  ____ ©
 /__    /   ____/   /   ____/      17.0
___/   /   /___/   /   /___/       MP—Parallel Edition

 Statistics and Data Science       Copyright 1985-2021 StataCorp LLC
                                   StataCorp
                                   4905 Lakeway Drive
                                   College Station, Texas 77845 USA
                                   800-STATA-PC        https://www.stata.com
                                   979-696-4600        stata@stata.com

Stata license: Single-user 2-core  perpetual
Serial number: 501706328764
  Licensed to: Miklos Koren
               CEU MicroData

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 5,000; see help set_maxvar.

. do scripts/analysis/rd_mortality_polys.do 

. ************
. * SCRIPT: 6_tables.do
. * PURPOSE: Create LaTeX tables from the outputted results
. ************
. 
. * Preamble (unnecessary when executing run.do)
. do "scripts/programs/_config.do"

. ******
. * This script contains code that allows scripts to be run individually on a s
> tandalone basis, if the user has defined the project global in their Stata pr
> ofile
. * It is unnecessary when executing run.do
. ******
. 
. * Ensure the script uses only local libraries and programs
. tokenize `"$S_ADO"', parse(";")

. while `"`1'"' != "" {
  2.   if `"`1'"'!="BASE" cap adopath - `"`1'"'
  3.   macro shift
  4. }

. adopath ++ "scripts/libraries/stata"
  [1]              "scripts/libraries/stata"
  [2]  (BASE)      "/Applications/Stata/ado/base/"

. 
. mata: mata mlib index
.mlib libraries to be searched are now
    lmatabase;lmatamcmc;lmatabma;lmatacollect;lmatatab;lmatamixlog;lmatami;lmat
> asem;lmatagsem;lmatasp;lmatapss;lmatalasso;lmatapostest;lmatapath;lmatameta;l
> mataopt;lmatasvy;lmatanumlib;lmataado;lmataerm;lmatafc

. 
. * Additional code you want automatically executed
. set varabbrev off

. 
. 
end of do-file

. do "scripts/programs/clean_var_names.do"

. * Standardized cleaning of variable names
. program drop _all

. program clean_varnames 
  1. 
.         local indent "\ \ \ \"
  2. 
.         * Mortality
.         replace `1' = "All causes" if `1'=="any"
  3.         replace `1' = "External causes" if `1'=="external"
  4.         replace `1' = "`indent' Motor vehicle accident" if `1'=="MVA"
  5.         replace `1' = "`indent' Suicide and accident" if `1'=="sa"
  6.         replace `1' = "`indent' `indent' Firearm" if `1'=="sa_firearms" | 
> `1'=="firearms"
  7.         replace `1' = "`indent' `indent' Poisoning" if `1'=="sa_poisoning"
>  | `1'=="poisoning"
  8.         replace `1' = "`indent' `indent' `indent' Drug overdose" if `1'=="
> sa_poisoning_subst" | `1'=="poisoning_subst"
  9.         replace `1' = "`indent' `indent' `indent' Carbon monoxide and othe
> r gases" if `1'=="sa_poisoning_gas" | `1'=="poisoning_gas"
 10.         replace `1' = "`indent' `indent' Drowning" if `1'=="sa_drowning" |
>  `1'=="drowning"
 11.         replace `1' = "`indent' `indent' Other" if `1'=="sa_other" | `1'==
> "other"
 12.         replace `1' = "`indent' Homicide" if `1'=="homicide"
 13.         replace `1' = "`indent' Other external" if `1'=="extother"
 14.         replace `1' = "Internal causes" if `1'=="internal"
 15.         
.         * Add Health
.         replace `1' = "Has driver's license" if `1'=="DriverLicense"
 16.         replace `1' = "Miles driven (miles/yr) (baseline)" if `1'=="Vehicl
> eMiles_150"
 17.         replace `1' = "Miles driven (miles/yr) (alternate)" if `1'=="Vehic
> leMiles_265"
 18.         
.         * Heterogeneity 
.         replace `1' = subinstr(`1',"WhiteMale",      "White male",     1)
 19.         replace `1' = subinstr(`1',"WhiteFemale",    "White female",   1)
 20.         replace `1' = subinstr(`1',"NonwhiteMale",   "Nonwhite male",  1)
 21.         replace `1' = subinstr(`1',"NonwhiteFemale", "Nonwhite female",1)
 22.         
.         replace `1' = "Full sample" if strpos(`1',"All") & !strpos(`1',"cause
> s")
 23.         
.         replace `1' = "`indent' MDA is 16"   if `1'=="mda192"
 24.         replace `1' = "`indent' MDA is not 16"   if `1'=="mda_not192"
 25. 
.         replace `1' = "January"   if `1'=="birmonth1" | `1'=="birmonth1_Femal
> e"
 26.         replace `1' = "February"  if `1'=="birmonth2" | `1'=="birmonth2_Fe
> male"
 27.         replace `1' = "March"     if `1'=="birmonth3" | `1'=="birmonth3_Fe
> male"
 28.         replace `1' = "April"     if `1'=="birmonth4" | `1'=="birmonth4_Fe
> male"
 29.         replace `1' = "May"       if `1'=="birmonth5" | `1'=="birmonth5_Fe
> male"
 30.         replace `1' = "June"      if `1'=="birmonth6" | `1'=="birmonth6_Fe
> male"
 31.         replace `1' = "July"      if `1'=="birmonth7" | `1'=="birmonth7_Fe
> male"
 32.         replace `1' = "August"    if `1'=="birmonth8" | `1'=="birmonth8_Fe
> male"
 33.         replace `1' = "September" if `1'=="birmonth9" | `1'=="birmonth9_Fe
> male"
 34.         replace `1' = "October"   if `1'=="birmonth10" | `1'=="birmonth10_
> Female"
 35.         replace `1' = "November"  if `1'=="birmonth11" | `1'=="birmonth11_
> Female"
 36.         replace `1' = "December"  if `1'=="birmonth12" | `1'=="birmonth12_
> Female"
 37.         
. end

. 
. * Destring with a sigfig() option [code taken from regsave_tbl] - used for fo
> rmatting decimals in the tables
. program gtostring
  1. 
.         syntax varlist, sigfig(numlist integer min=1 max=1 >=1 <=20) [force r
> eplace gen(passthru)]
  2.         
.         if "`sigfig'"!=""   {
  3.                 if "`format'"!="" {
  4.                         di as error "Cannot specify both the sigfig and fo
> rmat options."
  5.                         exit 198                                        
  6.                 }
  7.                 local format "%18.`sigfig'gc"
  8.         }
  9.         
.         tostring `varlist', `force' `replace' format(`format') `gen'
 10. 
.         qui foreach table of varlist `varlist' {
 11.         
.                 cap confirm string var `table'
 12.                 if !_rc {
 13. 
.                         tempvar tmp diff tail numast intvar orig lngth
 14.                         
.                         gen `intvar' = `table'=="."
 15.                         gen `orig' = `table'
 16.                                         
.                         gen     `tmp' = subinstr(`table',".","",1)
 17.                         replace `tmp' = subinstr(`tmp',".","",1)
 18.                         replace `tmp' = subinstr(`tmp',"(","",1)
 19.                         replace `tmp' = subinstr(`tmp',")","",1)
 20.                         replace `tmp' = subinstr(`tmp',"[","",1)
 21.                         replace `tmp' = subinstr(`tmp',"]","",1)
 22.                         replace `tmp' = subinstr(`tmp',"*","",.)
 23.                         replace `tmp' = subinstr(`tmp',"-","",.)
 24.                         
.                         * Remove leading zero's following the decimal point (
> they don't count towards sig figs)
.                         gen `lngth' = length(`tmp')
 25.                         summ `lngth'
 26.                         forval x = `r(max)'(-1)1 {
 27.                                 replace `tmp' = subinstr(`tmp', "0"*`x',""
> ,1) if substr(`tmp',1,`x')=="0"*`x'
 28.                         }
 29.                         
.                         gen `diff' = `sigfig' - length(`tmp')
 30.                         gen `tail' = "0"*`diff'
 31.                         gen `numast' = length(`table') - length(subinstr(`
> table', "*", "", .))
 32. 
.                         * Leading zero's
.                         replace `table' = "0"  + `table' if substr(`table',1,
> 1)=="."
 33.                         replace `table' = subinstr(`table',"-.","-0.",1)  
>  if substr(`table',1,2)=="-."
 34.                         replace `table' = subinstr(`table',"(.","(0.",1)  
>  if substr(`table',1,2)=="(."
 35.                         replace `table' = subinstr(`table',"[.","[0.",1)  
>  if substr(`table',1,2)=="[."
 36.                         replace `table' = subinstr(`table',"(-.","(-0.",1)
>  if substr(`table',1,3)=="(-."
 37.                         replace `table' = subinstr(`table',"[-.","[-0.",1)
>  if substr(`table',1,3)=="[-."
 38. 
.                         * Trailing zero's (note: asterisks can't occur with "
> )" or "]", because those are only for stderrs/tstats/ci)
.                         replace `table' = `table' +       `tail'             
>                                     if strpos(`table',".")!=0 & strpos(`table
> ',"*")==0 & substr(`table',1,1)!="(" & substr(`table',1,1)!="[" & !mi(`tail')
 39.                         replace `table' = `table' + "." + `tail'          
>                                        if strpos(`table',".")==0 & strpos(`ta
> ble',"*")==0 & substr(`table',1,1)!="(" & substr(`table',1,1)!="[" & !mi(`tai
> l')
 40.                         
.                         replace `table' = substr(`table',1,length(`table')-`n
> umast') +       `tail' + "*"*`numast'     if strpos(`table',".")!=0 & strpos(
> `table',"*")!=0 & substr(`table',1,1)!="(" & substr(`table',1,1)!="[" & !mi(`
> tail')
 41.                         replace `table' = substr(`table',1,length(`table')
> -`numast') + "." + `tail' + "*"*`numast'     if strpos(`table',".")==0 & strp
> os(`table',"*")!=0 & substr(`table',1,1)!="(" & substr(`table',1,1)!="[" & !m
> i(`tail')
 42.                         
.                         replace `table' = subinstr(`table',")",`tail'+")",1) 
> if strpos(`table',".")!=0 & substr(`table',1,1)=="("
 43.                         replace `table' = subinstr(`table',"]",`tail'+"]",
> 1) if strpos(`table',".")!=0 & substr(`table',1,1)=="["
 44.                         
.                         * Variables that were stored as integers (or missing)
>  are exact and shouldn't be altered
.                         replace `table' = `orig' if `intvar'==1
 45.                         replace `table' = "" if `table'=="."
 46.                                         
.                         drop `tmp' `diff' `tail' `numast' `intvar' `orig'
 47.                 }
 48.         }
 49. end

. 
end of do-file

. 
. ************
. * Code begins
. ************
. 
. clear

. set more off

. tempfile t table male_female

. 
. local reg_settings "parentheses(stderr) asterisk(5 1) sigfig(3)"

. local texsave_settings "replace autonumber nofix"

. 
. local fn_bracket "Robust, bias-corrected 95\% confidence intervals are report
> ed in brackets."

. local fn_asterisk "A */** indicates significance at the 5\%/1\% level using c
> onventional inference."

. local fn_familyp "Family-wise \(p\)-values, reported in braces, adjust for th
> e number of outcome variables in each family and for the number of subgroups.
> "

. 
. local fn_col2_ols "Column (2) reports OLS estimates from a model employing a 
> bandwidth of 24 months and reports robust standard errors in parentheses."

. local fn_col3_mse "Column (3) reports MSE-optimal estimates and reports robus
> t, bias-corrected 95\% confidence intervals in brackets."

. 
. * Mortality RD estimates for robustness checks
. use "results/intermediate/mortality_rd_robustness.dta", clear

. drop if mi(order_poly)
(36 observations deleted)

. 
. * For rdrobust, we will use the point estimate from "conventional" estimate a
> nd inference from "robust" bias-correction
. replace coef = b_conv
(27 real changes made)

. 
. * Variable formatting
. gtostring ci_lower ci_upper, force replace sigfig(3)
ci_lower was float now str5
ci_lower was forced to string; some loss of information
ci_upper was float now str4
ci_upper was forced to string; some loss of information

. gen ci = "[" + ci_lower + ", " + ci_upper + "]"

. 
. preserve

. 
. local run_no = 0

. foreach y in sa_poisoning MVA any {
  2. qui foreach scen in "Female" "Male" "All" {
  3. 
.         * MSE-optimal linear
.         regsave_tbl if scenario=="`scen'" & y=="cod_`y'" & rdspec=="rdrobust"
>  & order_poly==1, name(linear) `reg_settings'
  4.         keep if inlist(var,"Robust_coef","ci")
  5.         replace var = "`y'_`scen'" if var=="Robust_coef"
  6.         replace var = "`y'_`scen'_ci" if var=="ci"
  7.         if `run_no'==1 append using "`table'"
  8.         gen sortorder = _n
  9.         local run_no = 1        
 10.         save "`table'", replace
 11.         restore, preserve
 12. 
.         * MSE-optimal quadratic
.         regsave_tbl if scenario=="`scen'" & y=="cod_`y'" & rdspec=="rdrobust"
>  & order_poly==2, name(quadratic) `reg_settings'
 13.         keep if inlist(var,"Robust_coef","ci")
 14.         replace var = "`y'_`scen'" if var=="Robust_coef"
 15.         replace var = "`y'_`scen'_ci" if var=="ci"
 16.         merge 1:m var using "`table'", assert(match using) nogenerate
 17.         save "`table'", replace
 18.         restore, preserve
 19.         
.         * MSE-optimal cubic
.         regsave_tbl if scenario=="`scen'" & y=="cod_`y'" & rdspec=="rdrobust"
>  & order_poly==3, name(cubic) `reg_settings'
 20.         keep if inlist(var,"Robust_coef","ci")
 21.         replace var = "`y'_`scen'" if var=="Robust_coef"
 22.         replace var = "`y'_`scen'_ci" if var=="ci"
 23.         merge 1:m var using "`table'", assert(match using) nogenerate
 24.         save "`table'", replace
 25.         restore, preserve
 26.         
.         * Mean (same for different orders of polynomials)
.         keep if scenario=="`scen'" & y=="cod_`y'" & order_poly==1
 27.         keep mean_y
 28.         gen var = "`y'_`scen'"
 29.         merge 1:m var using "`table'", assert(match using) nogenerate   
 30.         sort sortorder
 31.         drop sortorder
 32.         
.         save "`table'", replace
 33.         restore, preserve
 34. }       
 35. }

. 
. restore, not

. use "`table'", clear

. 
. ***
. * Table formatting
. ***
. 
. order var mean_y linear quadratic cubic

. gtostring mean_y, force replace sigfig(3)
mean_y was float now str4
mean_y was forced to string; some loss of information

. replace mean_y = "" if mean_y=="."
(0 real changes made)

. 
. replace var = "" if strpos(var,"_ci")
(9 real changes made)

. replace var = "" if strpos(var,"_bw")
(0 real changes made)

. replace var = subinstr(var,"MVA_","",1)
(3 real changes made)

. replace var = subinstr(var,"sa_poisoning_","",1)
(3 real changes made)

. replace var = subinstr(var,"any_","",1)
(3 real changes made)

. clean_varnames var
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(3 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. replace var = "\addlinespace[1ex] " + var if !mi(var)
variable var was str22 now str30
(9 real changes made)

. 
. * Create panels
. ingap 1 7 13 

. replace var = "A. All deaths" in 1 if mi(var)
(1 real change made)

. replace var = "B. Motor vehicle fatalities" in 8 if mi(var)
(1 real change made)

. replace var = "C. Poisoning deaths" in 15 if mi(var)
(1 real change made)

. 
. * Label variables
. label var linear "Linear"

. label var quadratic "Quadratic"

. label var cubic "Cubic"

. label var mean_y "Mean"

. label var var "Subgroup"

. 
. * Output table
. local title "Effect of driving eligibility on mortality using different polyn
> omial approximations"

. local headerlines "& & & \multicolumn{1}{c}{RD estimate}" "\cmidrule(lr){3-5}
> "

. local fn "Notes: The dependent variable is deaths per 100,000 person-years. C
> olumn (1) reports means of the dependent variable one year before reaching th
> e minimum driving age (MDA). Columns (2)--(4) report estimates of \(\beta\) f
> rom equation (\ref{E - RD1}) using different polynomial approximations: linea
> r (our preferred specification), quadratic, and cubic. `fn_bracket' `fn_aster
> isk'"

. 
. texsave using "results/tables/rd_mortality_polys.tex", varlabels marker("tab:
> rd_mortality_polys") size(footnotesize) align(lCcCcCc) headerlines("`headerli
> nes'") bold("A. " "B. " "C. ") title("`title'") hlines(1 8 15)  footnote("`fn
> '", size(scriptsize)) `texsave_settings'

. 
. ** EOF
. 
end of do-file
